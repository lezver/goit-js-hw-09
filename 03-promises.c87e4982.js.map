{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,UAC7BC,EAAOC,EAAMC,EAAQC,GAAUN,EAqCtCA,EAAKO,iBAAiB,UAZFC,IAClBA,EAAEC,iBAxBkB,EAACC,EAAOC,EAAMC,KAClC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAAG,CAClC,MAAMC,EAAU,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLR,EACFM,EAAQ,uBAAqB,EAAKH,QAASN,EAAOC,EAAOK,OAEvDI,EAAK,sBAAoB,EAAGJ,QAASN,EAAOC,EAAOK,MAAO,GAE7DN,EAAQC,EAAOK,EAAE,IAGtBC,EAAQK,MAAKC,IACXC,EAAA1B,GAAS2B,OAAOC,QAAQH,EAAO,IAEjCN,EAAQU,OAAMC,IACZJ,EAAA1B,GAAS2B,OAAOI,QAAQD,EAAM,G,GAYlCE,CAJmBC,OAAO5B,EAAM6B,OACdD,OAAO3B,EAAK4B,OACVD,OAAO1B,EAAO2B,QAIlChC,EAAKiC,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst [delay, step, amount, button] = form;\n\nconst createPromise = (delay, step, amount) => {\n  const shouldResolve = Math.random() > 0.3;\n\n  for (let i = 0; i < amount; i += 1) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve(`✅ Fulfilled promise ${1 + i} in ${delay + step * i}ms`);\n        } else {\n          reject(`❌ Rejected promise ${1 + i} in ${delay + step * i}ms`);\n        }\n      }, delay + step * i);\n    });\n\n    promise.then(result => {\n      Notiflix.Notify.success(result);\n    });\n    promise.catch(error => {\n      Notiflix.Notify.failure(error);\n    });\n  }\n};\n\nconst checkOfFomr = e => {\n  e.preventDefault();\n\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  createPromise(delayValue, stepValue, amountValue);\n\n  form.reset();\n};\n\nform.addEventListener('submit', checkOfFomr);\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$button","addEventListener","e","preventDefault","delay1","step1","amount1","shouldResolve","Math","random","i","promise","Promise","resolve","reject","setTimeout","then","result","$parcel$interopDefault","Notify","success","catch","error","failure","$47d4ff9957288465$var$createPromise","Number","value","reset"],"version":3,"file":"03-promises.c87e4982.js.map"}